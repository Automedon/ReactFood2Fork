{"version":3,"sources":["components/Recipe.js","components/RecipeSearch.js","components/RecipeList.js","tempDetails.js","components/RecipeDetails.js","App.js","serviceWorker.js","index.js"],"names":["Recipe","_this$props$recipe","this","props","recipe","image_url","title","source_url","publisher","recipe_id","handleDetails","react_default","a","createElement","Fragment","className","src","alt","style","height","type","onClick","href","target","rel","Component","RecipeSearch","_this$props","value","handleSubmit","handleChange","onSubmit","htmlFor","name","placeholder","onChange","RecipeList","recipes","error","components_RecipeSearch","map","components_Recipe","key","f2f_url","ingredients","publisher_url","RecipeDetails","state","url","concat","_this","id","_this$state$recipe","handleIndex","item","i","App","base_url","pageIndex","search","query","index","setState","displayPage","components_RecipeList","components_RecipeDetails","e","data","preventDefault","_this$state","getRecipes","fetch","json","jsonData","length","console","log","_context","t0","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fdac8648.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\n\r\nclass Recipe extends Component {\r\n    render() {\r\n\r\n        const {\r\n            image_url,\r\n            title,\r\n               source_url,\r\n            publisher,\r\n            recipe_id\r\n        } = this.props.recipe;\r\n        const {handleDetails} = this.props;\r\n        return (\r\n            <>\r\n               <div className=\"col-10 mx-auto col-md-6 col-lg-4 my-3\">\r\n                   <div className=\"card\">\r\n                       <img src={image_url} alt=\"recipe\" className='img-card-top' style={{height:'14rem'}}/>\r\n                       <div className=\"card-body text-capitalize\">\r\n                           <h6>{title}</h6>\r\n                           <h6 className=\"text-warning text-slanted\">\r\n                               Provided by {publisher}\r\n                           </h6>\r\n                       </div>\r\n                       <div className=\"card-footer\">\r\n                           <button type='button' className='btn btn-primary text-capitalize'\r\n                            onClick={()=>handleDetails(0,recipe_id)}\r\n                           >\r\n                            details\r\n                           </button>\r\n                           <a href={source_url} className='btn btn-success mx-2 text-capitalize' target='_blank' rel=\"noopener noreferrer\">recipe url</a>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Recipe;\r\n","import React, {Component} from 'react';\r\n\r\n\r\nclass RecipeSearch extends Component {\r\n    render() {\r\n        const {value,handleSubmit,handleChange}=this.props\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-10 mx-auto col-md-8 mt-5 text-center\">\r\n                            <h1 className=\"text-slanted text-capitalize\">\r\n                                search for recipe with <strong className='text-danger'>Food2Fork</strong>\r\n                            </h1>\r\n                            <form className='mt-4 ' onSubmit={handleSubmit}>\r\n                                <label htmlFor=\"search\" className='text-capitalize'>type recipes separated by comma</label>\r\n                                <div className=\"input-group\">\r\n                                    <input className='form-control' type=\"text\" name='search' placeholder='chicken,onions,carrots' value={value} onChange={handleChange}/>\r\n                                    <div className=\"input-group-append\">\r\n                                        <button type='submit' className='input-group-text bg-primary text-white'> <i className=\"fas fa-search\"/>\r\n\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default RecipeSearch;\r\n","import React, {Component} from 'react';\r\n\r\nimport Recipe from \"./Recipe.js\";\r\nimport RecipeSearch from \"./RecipeSearch.js\";\r\n\r\nclass RecipeList extends Component {\r\n\r\n    render() {\r\n        const {recipes,handleDetails,value,handleSubmit,handleChange,error} = this.props;\r\n        return (\r\n            <div>\r\n\r\n                <RecipeSearch value={value} handleChange={handleChange} handleSubmit={handleSubmit}/>\r\n                <div className=\"container my-5\">\r\n                    <div >\r\n                    <div className=\"col-10 mx-auto col-md-6 text-center text-uppercase mb-3\">\r\n                        <h1 className=\"text-slanted\">\r\n                            Recipe List\r\n                        </h1>\r\n                    </div>\r\n                        <div className=\"row \">\r\n                            {error?(<h1 className='text-danger text-center'>{error}</h1>\r\n                                ):\r\n                                (recipes.map(recipe=>{\r\n                             return (\r\n                                        <Recipe handleDetails={handleDetails} key={recipe                                           .recipe_id} recipe={recipe}/>\r\n                                    )\r\n                                }))\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default RecipeList;\r\n","export const recipe = {\n  f2f_url: \"http://food2fork.com/view/35382\",\n  image_url:\n    \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n  ingredients: [\n    \"2 jalapeno peppers, cut in half lengthwise and seeded\",\n    \"2 slices sour dough bread\",\n    \"1 tablespoon butter, room temperature\",\n    \"2 tablespoons cream cheese, room temperature\",\n    \"1/2 cup jack and cheddar cheese, shredded\",\n    \"1 tablespoon tortilla chips, crumbled\"\n  ],\n  publisher: \"Closet Cooking\",\n  publisher_url: \"http://closetcooking.com\",\n  source_url:\n    \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\n  title: \"Jalapeno Popper Grilled Cheese Sandwich\"\n};\n","import React, {Component} from 'react';\r\n\r\nimport {recipe} from \"../tempDetails.js\";\r\n\r\nclass RecipeDetails extends Component {\r\n    state={\r\n        recipe:recipe,\r\n        url: `https://www.food2fork.com/api/get?key=516828933d9d5aaef3df4705d66f6da2&rId=${this.props.id}`\r\n    };\r\n        // async getRecipes(){\r\n        //   try {\r\n        //       const data = await fetch(this.state.url);\r\n        //       const jsonData = await data.json()\r\n        //       this.setState({recipe:jsonData.recipe})\r\n        //   }\r\n        //   catch (e) {\r\n        //       console.log(e)\r\n        //   }\r\n        //\r\n        // }\r\n        // componentDidMount(){\r\n        //     this.getRecipes()\r\n        // }\r\n    render() {\r\n        const {image_url,publisher,publisher_url,source_url,title,ingredients} = this.state.recipe;\r\n        const {handleIndex} = this.props\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-10 mx-auto col-md-6 my-3\">\r\n                            <button type='button' className='btn btn-warning mb-5 text-capitalize'\r\n                           onClick={()=>handleIndex(1)}\r\n                            >back to recipe list\r\n\r\n                            </button>\r\n                            <img src={image_url} className='d-block w-100' alt=\"recipe\"/>\r\n                        </div>\r\n                        <div className=\"col-10 mx-auto col-md-6 my-3\">\r\n                            <h6 className=\"text-uppercase\">{title}</h6>\r\n                            <h6 className=\"text-warning text-capitalize text-slanted\">\r\n                                provided by {publisher}\r\n                            </h6>\r\n                            <a href={publisher_url}\r\n                            target='_blank'\r\n                               rel=\"noopener noreferrer\"\r\n                               className='btn btn-primary mt-2 text-capitalize'\r\n                            >publisher web-page</a>\r\n                            <a href={source_url}\r\n                               target='_blank'\r\n                               rel=\"noopener noreferrer\"\r\n                               className='btn btn-success mt-2 mx-3 text-capitalize'\r\n                            >recipe</a>\r\n                            <ul className=\"list-group mt-4\">\r\n                                <h2 className=\"mt-3 mb-4\">\r\n                                    Ingredients\r\n                                </h2>\r\n                                {\r\n                                    ingredients.map((item,i)=>{\r\n                                        return (\r\n                                            <li key={i} className='list-group-item text-slanted'>\r\n                                                {item}\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default RecipeDetails;\r\n","import React from 'react';\nimport './App.css';\n\nimport RecipeList from './components/RecipeList.js'\nimport RecipeDetails from \"./components/RecipeDetails.js\";\n\nclass App extends React.Component {\n    state = {\n        recipes: [],\n        url: 'https://www.food2fork.com/api/search?key=516828933d9d5aaef3df4705d66f6da2',\n        base_url:'https://www.food2fork.com/api/search?key=516828933d9d5aaef3df4705d66f6da2',\n        id: 35382,\n        pageIndex: 1,\n        search: '',\n        query:'&q=',\n        error:''\n    };\n    async getRecipes(){\n      try {\n          const data = await fetch(this.state.url);\n          const jsonData = await data.json();\n\n          if (jsonData.recipes.length===0){\n              this.setState({error:'No matches'})\n          } else {\n              this.setState({recipes:jsonData.recipes});\n          }\n\n      }\n      catch (e) {\n          console.log(e)\n      }\n\n    }\n    componentDidMount(){\n        this.getRecipes()\n    }\n    handleIndex = index => {\n        this.setState({pageIndex: index})\n    };\n    handleDetails = (index, id) => {\n        this.setState({\n            pageIndex: index,\n            id\n        })\n    };\n    displayPage = index => {\n        switch (index) {\n            case 1:\n                return <RecipeList recipes={this.state.recipes} handleDetails={this.handleDetails}\n                                   value={this.state.search} handleChange={this.handleChange}\n                                   handleSubmit={this.handleSubmit}\n                error={this.state.error}\n                />;\n            case 0:\n                return <RecipeDetails id={this.state.id} handleIndex={this.handleIndex}/>;\n            default:\n\n        }\n    };\n    handleChange = (e) => {\n        let data = e.target.value;\n        this.setState({search: data})\n\n    };\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {base_url,query,search}  = this.state;\n        this.setState(()=>{\n            return {url:`${base_url}${query}${search}`, search:''}\n        },()=>{\n            this.getRecipes()\n        })\n    };\n\n    render() {\n        console.log(this.state)\n        return (\n            <>\n                {this.displayPage(this.state.pageIndex)}\n            </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}